:root {
    --nav-height: 60px;
}

body {
	font-family: "PingFang SC","Microsoft YaHei","SF Pro",sans-serif;
	background: #fafafa;
	color: #222;
	text-align: center;
	margin: 0;
	padding: calc(var(--nav-height) + 20px) 20px 20px;
	transition: background 0.6s ease,color 0.6s ease;
}

h1 {
	/* 用可动画的线性渐变替代固定颜色，裁剪为文本显示 */
	font-size: 30px;
	font-weight: 700;
	letter-spacing: 1px;
	margin: 12px 0 20px;
	/* 渐变背景及动画设置 */
	background: linear-gradient(90deg, #161de8, #4de0ff, #ff6b6b, #a64dff, #161de8);
	background-size: 400% 400%;
	-webkit-background-clip: text;
	background-clip: text;
	-webkit-text-fill-color: transparent; /* Safari/Chrome */
	color: transparent;
	animation: gradientShift 3s ease infinite, fadeIn 1s ease;
	transition: color 0.6s ease;
}

@keyframes gradientShift {
	0% {
		background-position: 0% 50%;
	}
	50% {
		background-position: 100% 50%;
	}
	100% {
		background-position: 0% 50%;
	}
}

#status {
	display: inline-flex;
	align-items: center;
	gap: 8px;
	margin-bottom: 12px;
}

.dot {
	width: 10px;
	height: 10px;
	border-radius: 50%;
	background: #4caf50;
	animation: blink 1.5s infinite alternate;
	transition: background 0.6s ease;
}

/* 大号状态显示（仅首页使用 .status-xl） */
.status-xl { display: inline-flex; align-items: center; gap: 12px; }
.status-xl .dot { width: 16px; height: 16px; }
.status-xl #online-status { font-size: 18px; font-weight: 700; color: #1e303f; }

@keyframes blink {
	0% {
		opacity: 1;
	}

	100% {
		opacity: 0.4;
	}
}

/* Refresh button (scoped name to avoid collisions) */
.refresh-btn {
	--main-focus: #2d8cf0;
	--font-color: #323232;
	--bg-color-sub: #dedede;
	--bg-color: #eee;
	--main-color: #323232;
	position: relative;
	width: 150px;
	height: 40px;
	cursor: pointer;
	display: flex;
	align-items: center;
	border: 2px solid var(--main-color);
	box-shadow: 4px 4px var(--main-color);
	background-color: var(--bg-color);
	border-radius: 10px;
	overflow: hidden;
}

.refresh-btn, .refresh-btn__icon, .refresh-btn__text {
	transition: all 0.3s;
}

.refresh-btn .refresh-btn__text {
	transform: translateX(30px);
	color: var(--font-color);
	font-weight: 600;
}

.refresh-btn .refresh-btn__icon {
	position: absolute;
	transform: translateX(109px);
	height: 100%;
	width: 39px;
	background-color: var(--bg-color-sub);
	display: flex;
	align-items: center;
	justify-content: center;
}

.refresh-btn .svg {
	width: 20px;
	fill: var(--main-color);
}

.refresh-btn:hover {
	background: var(--bg-color);
}

.refresh-btn:hover .refresh-btn__text {
	color: transparent;
}

.refresh-btn:hover .refresh-btn__icon {
	width: 148px;
	transform: translateX(0);
}

.refresh-btn:active {
	transform: translate(3px, 3px);
	box-shadow: 0px 0px var(--main-color);
}

/* Position the refresh button in the top-left, avoid overlapping existing back buttons */
.refresh-btn {
	position: fixed;
	left: 16px;
	z-index: 10250;
}

/* Index page: keep refresh button near the top nav */
body.index-page .refresh-btn {
	top: calc(var(--nav-height) + 22px);
}

/* Other pages: position refresh so it matches spacing of back-button (16px) and back-prev (64px) */
body:not(.index-page) .refresh-btn {
	/* back-button: 16px, back-prev: 64px -> refresh should be 112px to keep 48px spacing */
	top: 112px;
}

/* If .back-button exists nearby, push the refresh button slightly down to avoid collision */
@media (min-width: 0px) {
	.back-button + .refresh-btn, .back-button.uiverse-btn + .refresh-btn { top: calc(var(--nav-height) + 64px); }
}

/* Small screens: reduce size and spacing */
@media (max-width: 600px) {
	/* Make refresh button a compact circular icon like #darkToggle on small screens */
	.refresh-btn {
		left: 8px;
		top: calc(var(--nav-height) + 10px);
		width: 44px;
		height: 44px;
		padding: 0;
		border-radius: 50%;
		display: inline-flex;
		align-items: center;
		justify-content: center;
		/* stronger multi-layer shadow for a modern, floating look */
		box-shadow: 0 8px 18px rgba(31,45,61,0.08), 0 2px 6px rgba(31,45,61,0.04) inset;
		background: transparent; /* background will be handled by pseudo-element to allow animated fill */
		border: 0; /* border included in pseudo or hidden for cleaner look */
		position: fixed;
	}

	/* pseudo-element used as animated fill/background so the icon can sit on top */
	.refresh-btn::before {
		content: '';
		position: absolute;
		left: 50%;
		top: 50%;
		width: 44px;
		height: 44px;
		transform: translate(-50%, -50%) scale(0.92);
		border-radius: 50%;
		background: rgba(25,118,210,0.12);
		/* multi-layer shadow on the pseudo background for depth */
		box-shadow: 0 10px 24px rgba(31,45,61,0.12), 0 4px 8px rgba(31,45,61,0.06) inset;
		border: 1px solid rgba(25,118,210,0.12);
		transition: transform 160ms cubic-bezier(.2,.9,.3,1), opacity 160ms ease, background 160ms ease;
		z-index: 0;
	}

	/* hide the textual label but keep aria-label for accessibility */
	.refresh-btn .refresh-btn__text { display: none !important; }

	/* center the svg icon and size it appropriately; place it above the pseudo background */
	.refresh-btn .refresh-btn__icon {
		position: relative;
		transform: none;
		width: auto;
		height: auto;
		display: inline-flex;
		align-items: center;
		justify-content: center;
		z-index: 1;
		/* remove desktop-only gray square */
		background: transparent !important;
		min-width: 0;
		min-height: 0;
		padding: 0;
	}
	.refresh-btn .svg { width: 20px; height: 20px; }

	/* on pointer hover (desktop) expand background slightly for affordance */
	.refresh-btn:hover::before { transform: translate(-50%, -50%) scale(1); }

	/* when JS adds .pressed (refresh_button.js does), show pressed animation and quick scale */
	.refresh-btn.pressed::before { transform: translate(-50%, -50%) scale(1.06); }

	/* ensure pressed state also gives tactile feedback to the button itself */
	.refresh-btn.pressed { transform: translateY(1px) scale(0.96); box-shadow: 0 4px 12px rgba(31,45,61,0.06); }

	/* darken the pseudo background briefly on active/pressed for visible feedback */
	.refresh-btn:active::before, .refresh-btn.pressed::before { background: rgba(25,118,210,0.18); }

	/* affordance: slight lift on hover (desktop emulation) and press effect */
	.refresh-btn { transition: transform 180ms cubic-bezier(.2,.9,.3,1), box-shadow 180ms cubic-bezier(.2,.9,.3,1); }
	.refresh-btn:hover { transform: translateY(-3px); }
	.refresh-btn:active, .refresh-btn:focus-visible { transform: translateY(1px) scale(0.96); box-shadow: 0 4px 12px rgba(31,45,61,0.06); }
}

/* Non-index mobile: make refresh align equidistant with the two back buttons (8px,48px,88px) */
@media (max-width: 600px) {
	body:not(.index-page) .refresh-btn { top: 88px !important; }
}

.info-block,#focus-card,.metric-box {
	transition: background 0.6s ease,color 0.6s ease,border-color 0.6s ease;
}

.info-block {
	background: #fff;
	border-radius: 10px;
	display: inline-block;
	padding: 10px 20px;
	margin-bottom: 20px;
	font-size: 17px;
	box-shadow: 0 1px 4px rgba(0,0,0,0.05);
	animation: fadeIn 1s ease;
}

#focus-card {
	background: #fff;
	border-radius: 12px;
	box-shadow: 0 2px 6px rgba(0,0,0,0.08);
	padding: 20px;
	margin: 24px auto;
	max-width: 600px;
	animation: fadeUp 1s ease;
}

.focus-title {
	font-size: 22px;
	font-weight: 800;
	color: #1976d2;
	margin-bottom: 10px;
	transition: color 0.6s ease;
}

/* merged from overrides.css */
.focus-title-error{ color: #f44336; }

.focus-details {
	font-size: 15px;
	color: #333;
	line-height: 1.6;
	transition: color 0.6s ease;
}

.metrics-grid {
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	gap: 12px;
	margin-top: 10px;
}

.metric-box {
	background: #fff;
	border: 1px solid #e0e0e0;
	border-radius: 10px;
	width: 160px;
	padding: 16px;
	transition: all 0.6s ease;
	box-shadow: 0 1px 3px rgba(0,0,0,0.05);
	animation: fadeUp 1s ease;
}

.metric-box:hover {
	transform: translateY(-3px);
	box-shadow: 0 3px 8px rgba(0,0,0,0.1);
}

.metric-label {
	font-size: 14px;
	color: #666;
	margin-bottom: 6px;
	transition: color 0.6s ease;
}

.metric-value {
	font-size: 26px;
	font-weight: 700;
	color: #1565c0;
	transition: color 0.6s ease,transform 0.3s ease;
}

/* 调整网络速率显示稍微小一点，优先级高于 .metric-value */
#netVal {
	font-size: 22px;
}

#uptime {
	margin-top: 10px;
	font-size: 16px;
	font-weight: 600;
	color: #444;
	transition: color 0.6s ease;
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}

	to {
		opacity: 1;
	}
}

@keyframes fadeUp {
	from {
		opacity: 0;
		transform: translateY(10px);
	}

	to {
		opacity: 1;
		transform: translateY(0);
	}
}

@media (max-width:600px) {
	.metric-box {
		width: 45%;
		min-width: 130px;
	}

	h1 {
		font-size: 24px;
	}
}

/* 防止移动端横向滚动（左右滑动），只允许纵向滚动 */
@media (max-width:900px) {
	/* keep overall page from horizontal overflow but allow side-axis gestures on nav bar */
	html, body { overflow-x: hidden !important; }
	/* 确保 docs 内容不会超出容器宽度 */
	.docs-content, .docs-layout, .docs-container { max-width: 100%; box-sizing: border-box; }
	.docs-content img { max-width: 100%; height: auto; }
}

/* Make main content padding smaller to avoid excessive whitespace on mobile */
@media (max-width:600px) {
	body {
		/* add a small right padding to avoid fixed UI or platform scrollbars overlapping text */
		padding: calc(var(--nav-height) + 12px) 14px 12px 14px;
	}
	.docs-container {
		margin: 18px auto;
		padding: 8px;
	}
	.docs-content { padding: 14px; }
	/* Improve line length and text on small screens */
	.doc-step p, .doc-step h3 { text-align: left; }
}

/* 导航栏样式 */
.top-nav {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	width: 100%;
	background: #fff;
	box-shadow: 0 2px 8px rgba(0,0,0,0.08);
	/* 提高 z-index，使导航（包含切换按钮和下拉菜单）可以覆盖浮动按钮 */
	z-index: 10150;
	transition: background 0.6s ease;
	height: var(--nav-height);
	border-radius: 10px; /* 圆角 */
	overflow: hidden;
}

.nav-inner {
	max-width: 1200px;
	margin: 0 auto;
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 10px 20px;
	height: 100%;
}

@media (max-width: 600px) {
	.top-nav { border-radius: 6px; }
}

.brand {
	display: flex;
	align-items: center;
	text-decoration: none;
	font-size: 18px;
	font-weight: 700;
}

.brand-logo img {
	width: 32px;
	height: 32px;
	border-radius: 50%;
	margin-right: 10px;
}

.nav-toggle {
	display: none;
	background: none;
	border: none;
	font-size: 24px;
	cursor: pointer;
	padding: 5px;
	/* 保证切换按钮在浮动元素之上可点击 */
	z-index: 10160;
}

.nav-menu {
	display: flex;
	list-style: none;
	margin: 0;
	padding: 0;
}

.nav-menu li {
	margin: 0 15px;
}

.nav-menu a {
	text-decoration: none;
	color: #333;
	font-weight: 500;
	padding: 5px 10px;
	border-radius: 5px;
	transition: background 0.3s ease, color 0.3s ease;
}

.nav-menu a:hover {
	background: #f0f0f0;
	color: #1976d2;
}

@media (max-width: 768px) {
	/* 移动端：窄面板居中显示（如红框示意），并带淡入/上移的动画 */
	.nav-menu {
		display: none;
		flex-direction: column;
		position: fixed;
		top: calc(var(--nav-height) + 8px); /* 放在固定导航下方并留出一点间距 */
		left: 50%;
		transform: translateX(-50%) translateY(-6px);
		width: 320px; /* 面板宽度，可按需调整 */
		box-sizing: border-box;
		background: #fff;
		box-shadow: 0 6px 24px rgba(0,0,0,0.12);
		padding: 8px 0;
		/* 圆角面板 */
		border-radius: 16px;
		/* 隐藏溢出以便圆角生效，同时保留内部滚动 */
		overflow: hidden;
		/* 当打开时，菜单应位于浮动按钮之上 */
		z-index: 10140;
		/* 当菜单很长时允许滚动 */
		max-height: calc(100vh - var(--nav-height) - 16px);
		overflow-y: auto;
		opacity: 0;
		transition: opacity 240ms ease, transform 240ms ease;
	}

	.nav-menu.open {
		display: flex;
		opacity: 1;
		transform: translateX(-50%) translateY(0);
	}

	.nav-menu li {
		margin: 6px 0;
		text-align: center;
	}

	.nav-menu a {
		display: block;
		padding: 12px 16px; /* 更适合触控的点击区域 */
	}

	/* 子菜单指示器（三角） */
	.nav-menu li.has-submenu > a {
		position: relative;
	}

	.nav-menu li.has-submenu > a::after {
		content: '';
		position: absolute;
		right: 16px;
		top: 50%;
		width: 0;
		height: 0;
		border-left: 6px solid transparent;
		border-right: 6px solid transparent;
		border-top: 8px solid rgba(0,0,0,0.35); /* 小三角 */
		transform: translateY(-50%) rotate(0deg);
		transition: transform 200ms ease;
	}

	/* 展开时旋转指示器（向上或向左根据视觉需要） */
	.nav-menu li.submenu-open > a::after {
		transform: translateY(-50%) rotate(-180deg);
	}

	.nav-toggle {
		display: block;
	}

	/* 如果有二级菜单（ul 嵌套），在移动端以块级展示并允许展开滚动 */
	.nav-menu li ul {
		display: block;
		position: relative;
		background: transparent;
		box-shadow: none;
		margin: 0;
		padding: 0 12px 8px 12px;
		z-index: 10145;
		/* 折叠动画（将高度限制并过渡） */
		max-height: 0;
		overflow: hidden;
		opacity: 0;
		transform: translateY(-6px);
		transition: max-height 260ms ease, opacity 200ms ease, transform 200ms ease;
	}

	.nav-menu li ul li a {
		padding-left: 18px; /* 二级菜单项略微缩进 */
	}

	/* 打开子菜单 */
	.nav-menu li.submenu-open > ul {
		max-height: 1000px; /* 足够大以容纳内容，实际由内容高度控制 */
		opacity: 1;
		transform: translateY(0);
	}

	/* 夜间模式适配（移动端导航面板与二级菜单） */
	body.dark .top-nav { background: #0f1113 !important; box-shadow: 0 2px 8px rgba(0,0,0,0.6); }
	body.dark .nav-menu {
		background: #0f1113 !important;
		box-shadow: 0 6px 24px rgba(0,0,0,0.6);
		color: #e6eef9;
	}
	body.dark .nav-menu a { color: #e6eef9; }
	body.dark .nav-menu a:hover { background: rgba(255,255,255,0.03); color: #64b5f6; }
	body.dark .nav-menu li.has-submenu > a::after { border-top-color: rgba(255,255,255,0.6); }
	body.dark .nav-menu li ul {
		background: rgba(255,255,255,0.02);
		box-shadow: none;
		color: #e6eef9;
	}

}

/* 当移动端导航打开时，阻止页面背景滚动 */
body.nav-open {
	overflow: hidden;
}

/* 返回主页按钮样式 */
/* Floating helper buttons (left / right) - unified, softer visual */
.floating-btn {
	position: fixed;
	display: inline-flex;
	align-items: center;
	gap: 8px;
	padding: 8px 12px;
	background: rgba(25,118,210,0.12); /* soft tint */
	color: #1976d2;
	text-decoration: none;
	border-radius: 10px;
	font-weight: 600;
	font-size: 14px;
	box-shadow: 0 6px 18px rgba(31,45,61,0.06);
	-webkit-backdrop-filter: blur(4px);
	backdrop-filter: blur(4px);
	border: 1px solid rgba(25,118,210,0.12);
	transition: transform 160ms ease, box-shadow 160ms ease, background 160ms ease;
	z-index: 10010;
}

.floating-btn:hover {
	transform: translateY(-3px) scale(1.03);
	box-shadow: 0 10px 24px rgba(31,45,61,0.09);
}

/* 返回上一页 按钮样式（次级，与返回主页风格一致但稍小） */
/* keep original selectors but delegate to unified class for easy HTML-free upgrade */
/* position left-top */
.back-button { top: 16px; left: 16px; }
.back-prev { top: 64px; left: 16px; }

/* Force left-top placement regardless of parent container centering */
.back-button, .back-prev {
	position: fixed !important;
	left: 16px !important;
}
.back-button { top: 16px !important; }
.back-prev { top: 64px !important; }

/* Responsive: reduce size and spacing on small screens */
@media (max-width: 600px) {
	.back-button, .back-prev { left: 8px !important; }
	.back-button { top: 8px !important; }
	.back-prev { top: 48px !important; }
	.uiverse-btn { padding: .6em 1em; font-size: 13px; }
}

/* Actually apply the shared visual rules by combining selectors to avoid changing HTML */
.back-button.floating, .back-prev.floating, #darkToggle.floating, .back-button, .back-prev, #darkToggle {
	/* copy of .floating-btn base so no extra HTML class is required */
	position: fixed;
	display: inline-flex;
	align-items: center;
	gap: 8px;
	padding: 8px 12px;
	background: rgba(25,118,210,0.12);
	color: #1976d2;
	text-decoration: none;
	border-radius: 10px;
	font-weight: 600;
	font-size: 14px;
	box-shadow: 0 6px 18px rgba(31,45,61,0.06);
	-webkit-backdrop-filter: blur(4px);
	backdrop-filter: blur(4px);
	border: 1px solid rgba(25,118,210,0.12);
	transition: transform 160ms ease, box-shadow 160ms ease, background 160ms ease;
	z-index: 10010;
}

/* #darkToggle visual styles are applied via the combined selector above; positioning kept in its own rule. */

/* --- Icon-only theme toggle: compact moon/sun button to avoid covering content --- */
#darkToggle {
	/* make it a small circular icon button */
	width: 44px;
	height: 44px;
	padding: 0;
	border-radius: 50%;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	font-size: 18px;
	line-height: 1;
	box-shadow: 0 6px 18px rgba(31,45,61,0.06);
	background: rgba(25,118,210,0.12);
	border: 1px solid rgba(25,118,210,0.12);
	transition: transform 180ms cubic-bezier(.2,.9,.3,1), box-shadow 180ms cubic-bezier(.2,.9,.3,1);
}

/* hide the textual label inside the uiverse-btn markup */
/* Hide any non-empty span (the textual label) inside the toggle; keep decorative empty spans */
#darkToggle span:not(:empty) { display: none !important; }

/* use pseudo-element to show moon by default, sun when in dark mode (body.dark present) */
#darkToggle::before {
	/* 使用按钮上的 data-icon 属性作为图标来源，避免与文本节点重复 */
	content: attr(data-icon);
	display: inline-block;
	transform: translateY(-1px);
}

/* slightly lift on hover for affordance */
#darkToggle:hover { transform: translateY(-3px); }

/* 磁盘空间卡片样式 */
.disk-card {
	background: #fff;
	border-radius: 12px;
	box-shadow: 0 2px 6px rgba(0,0,0,0.08);
	padding: 20px;
	margin: 24px auto;
	max-width: 600px;
	animation: fadeUp 1s ease;
}

.disk-details {
	margin-bottom: 20px;
}

.disk-bar {
	width: 100%;
	height: 20px;
	background: #e0e0e0;
	border-radius: 10px;
	overflow: hidden;
	margin: 8px 0;
}

.disk-fill {
	height: 100%;
	background: linear-gradient(90deg, #1976d2, #64b5f6);
	transition: width 0.5s ease;
}

.disk-sub {
	margin-top: 20px;
	border-top: 1px solid #eee;
	padding-top: 20px;
}

/* 渐变文字样式 */
.gradient-text {
	/* 渐变背景及动画设置 */
	background: linear-gradient(90deg, #161de8, #4de0ff, #ff6b6b, #a64dff, #161de8);
	background-size: 400% 400%;
	-webkit-background-clip: text;
	background-clip: text;
	-webkit-text-fill-color: transparent;
	color: transparent;
	animation: gradientShift 3s ease infinite;
	transition: color 0.6s ease;
}

/* Fullscreen refresh overlay + spinner (used by refresh_button.js) */
.page-refresh-overlay {
	position: fixed;
	inset: 0;
	display: flex;
	align-items: center;
	justify-content: center;
	background: rgba(255,255,255,0); /* start transparent */
	opacity: 0;
	pointer-events: none;
	transition: background 420ms ease, opacity 420ms ease;
	z-index: 10500; /* above nav and floating buttons */
}
.page-refresh-overlay.visible {
	opacity: 1;
	pointer-events: auto;
	background: rgba(255,255,255,0.95);
}
.page-refresh-overlay .refresh-spinner {
	width: 48px;
	height: 48px;
	border-radius: 50%;
	border: 4px solid rgba(0,0,0,0.08);
	border-top-color: #1976d2;
	box-shadow: 0 6px 18px rgba(31,45,61,0.06);
	animation: refresh-spin 900ms linear infinite;
	z-index: 10501;
}

@keyframes refresh-spin {
	to { transform: rotate(360deg); }
}

/* Dark mode variant */
body.dark .page-refresh-overlay.visible {
	background: rgba(10,12,14,0.94);
}
body.dark .page-refresh-overlay .refresh-spinner {
	border: 4px solid rgba(255,255,255,0.06);
	border-top-color: #64b5f6;
}


body.dark .disk-sub {
	color: #e0e0e0;
}

/* Uiverse-style animated button (scoped to .uiverse-btn to avoid global button conflicts) */
.uiverse-btn {
	font-family: Arial, Helvetica, sans-serif;
	font-weight: bold;
	color: white;
	background-color: #171717;
	padding: 1em 2em;
	border: none;
	border-radius: .6rem;
	/* do NOT set position here — allow .back-button/.back-prev/#darkToggle to keep fixed positioning */
	cursor: pointer;
	overflow: hidden;
	display: inline-flex;
	align-items: center;
	justify-content: center;
}

.uiverse-btn span:not(:nth-child(6)) {
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);
	/* smaller decorative dots so they don't form visible blocks behind text */
	height: 16px;
	width: 16px;
	background-color: #0c66ed;
	opacity: 0.45; /* further reduce opacity */
	border-radius: 50%;
	transition: .6s ease;
	pointer-events: none;
}

.uiverse-btn span:nth-child(6) {
	position: relative;
}

.uiverse-btn span:nth-child(1) { transform: translate(-3.3em, -4em); }
.uiverse-btn span:nth-child(2) { transform: translate(-6em, 1.3em); }
.uiverse-btn span:nth-child(3) { transform: translate(-.2em, 1.8em); }
.uiverse-btn span:nth-child(4) { transform: translate(3.5em, 1.4em); }
.uiverse-btn span:nth-child(5) { transform: translate(3.5em, -3.8em); }

.uiverse-btn:hover span:not(:nth-child(6)) {
	/* keep default behavior for most uiverse buttons */
	transform: translate(-50%, -50%);
	transition: .6s ease;
}

/* Disable decorative animation specifically for the theme toggle button */
#darkToggle.uiverse-btn span:not(:nth-child(6)),
#darkToggle.uiverse-btn span { 
	/* hide decorative dots and prevent them from animating */
	display: none !important;
}

#darkToggle.uiverse-btn:hover {
	/* prevent hover transform/scale on the button itself */
	transform: none !important;
	box-shadow: 0 6px 18px rgba(31,45,61,0.06) !important;
}

/* Press effect: scale down slightly and reduce shadow for tactile feedback */
#darkToggle:active, #darkToggle:focus-visible {
	transform: translateY(1px) scale(0.94) !important;
	box-shadow: 0 4px 12px rgba(31,45,61,0.06) !important;
}

/* make sure uiverse buttons integrate with existing positions for back buttons and dark toggle */
.back-button.uiverse-btn, .back-prev.uiverse-btn {
	/* translucent light-blue with blur */
	background: rgba(12,102,237,0.06);
	-webkit-backdrop-filter: blur(6px);
	backdrop-filter: blur(6px);
	color: #0b63c7; /* deep blue text (gradient will override for text span) */
	border: 1px solid rgba(12,102,237,0.12);
	box-shadow: 0 8px 24px rgba(12,102,237,0.06);
	z-index: 10020; /* ensure above content */
}

/* Day-mode: make the button text a blue gradient for visual emphasis */
.back-button.uiverse-btn span:nth-child(6), .back-prev.uiverse-btn span:nth-child(6) {
	display: inline-block; /* ensure background-clip applies to text */
	background-image: linear-gradient(90deg,#1976d2,#64b5f6);
	background-size: 200% 200%;
	-webkit-background-clip: text;
	background-clip: text;
	-webkit-text-fill-color: transparent;
	color: transparent;
	text-decoration: none;
	padding: 0; /* no extra box behind text */
	margin: 0;
	line-height: 1;
}

/* Reduce size of the two left-top back buttons so they don't overlap and look compact */
.back-button.uiverse-btn, .back-prev.uiverse-btn {
	padding: .6em 1em !important;
	border-radius: .6rem;
}

/* smaller variant for the small "back-prev" if needed */
.back-prev.uiverse-btn { padding: .7em 1.2em; border-radius: .5rem; }
